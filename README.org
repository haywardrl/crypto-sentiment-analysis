#+TITLE: MSc Project: LXH079

**IMPORTANT: All input data removed due to file size limit**

* Table of Contents
- [[#general][General]]
- [[#folder-structure][Folder Structure]]
  - [[#code][code]]
  - [[#input_data][input_data]]
  - [[#inspection_presentation][inspection_presentation]]
  - [[#output_data][output_data]]
  - [[#progress_logs][progress_logs]]
  - [[#project_report][project_report]]
  - [[#proposal][proposal]]
- [[#approach][Approach]]
- [[#analysis][Analysis]]
  - [[#tweet-extraction---twint][Tweet Extraction - Twint]]
  - [[#data-clean---regex][Data Clean - Regex]]
  - [[#sentiment-analysis---textblob][Sentiment Analysis - TextBlob]]
  - [[#dataframe-consolidation][Dataframe Consolidation]]
- [[#graph-plotting][Graph Plotting]]
  - [[#coin-prices][Coin Prices]]
  - [[#polarity-analysis][Polarity Analysis]]
  - [[#objectivity-vs-neutrality][Objectivity vs Neutrality]]
  - [[#price-impact-analysis][Price Impact Analysis]]
  - [[#tweet-volume][Tweet Volume]]
  - [[#correlation-analysis][Correlation Analysis]]

* General

This README org document details the contents of the repository, including folder structure, categorised sections for explanation and links to the relevant files.

Each of the python files has been generated using Literate Programming (https://en.wikipedia.org/wiki/Literate_programming) with the help of Org files. This has allowed me to detail my comments and logic alongside the source code blocks for improved documentation as opposed to the traditional '# insert comment' found in python files. As a result, please refer to each of the Org files which will be linked below for comments and logic. The python files will not include any comments as each Org file will generate the source code blocks in unison.

* Folder Structure

** code

This folder contains a [[file:code/cryptocurrency_analysis/][cryptocurrency_analysis]] folder, which holds all of the relevant Org files and Python files which helped generate the project outcome to be detailed in the project dissertation.

** input_data

Each file in this folder holds a particular formatting rule - A_B_C.csv

- A: This identifies the cryptocurrency for which the csv is relevant to.
- B: An identifier for the type of information:
  - cp: coin price - sourced from https://finance.yahoo.com/
  - gt: google trends - sourced from https://trends.google.com/trends/?geo=GB
  - tv: tweet volume - sourced from https://bitinfocharts.com/comparison/tweets-btc-ada.html
- C: Snapshot refers to information for 14/03/21 - 31/03/21 and Extended refers to information for 01/01/18 - 01/08/21

Some data includes 'week' or 'month' in the naming, this is required for the price data to be able to compare with other data which was not able to be sourced on a daily basis.

All information was stored in csv files to utilise Pandas 'read_csv' funcitonality.

** inspection_presentation

Presentation documents for the inspection held on 20/07/21.

** output_data

*** clean_tweet_data

- CSV files generated by a regex clean and the application of TextBlob to add a column for the sentiment analysis.
- Additionally, due to limitations of the Tweet extraction, some functionality is deprecated and so language filter has been manually applied.

*** correlation_data

Manual consolidation of data to generate a CSV file for which a correlation graph can be plotted against.

*** plots

Various plots (.png files) generated by the sentiment_plots.py file.

*** raw_tweet_data

CSV files holding the raw tweet data extracted by the Twint python module.

*** sentiment_dataframes_csv

CSV files with consolidated information detailing averages and other metrics used for plotting.

** progress_logs

Progress logs for each week of the project timeline. PDF files generated from the Org files.

** project_report

Project report including both original org file and converted pdf file.

** proposal

Proposal document created for initial phase of the project.

* Approach

Bitcoin and Cardano chosen as the two cryptocurrencies of choice. The following two timeframes were used to analyse both the short and longer-term impact:

 - Snapshot: 14th March 2021 - 31st March 2021. Date was chosen due to a limitation of the Twint module in conjunction with the Twitter API.
 - Extended: 1st January 2018 - 1st August 2021. Date chosen as it allowed for a longer time period and both cryptocoins were established in the market.

* Analysis

All programming code, including detailed commentary, for the sub-headings within this section can be be found in the following document [[file:code/cryptocurrency_analysis/analysis.org][Analysis]].

** Tweet Extraction - Twint

[[https://github.com/twintproject/twint][https://github.com/twintproject/twint]]

Twint acts like a webscraper, without the need for Beautiful Soup/Selenium and therefore, does not need a Twitter Account to access tweets. This overcomes the barriers for extracting large data that the Twitter API applies. The only limitations with Twint are 3200 maximum tweets from .profile or .Favourites (Twitter pages for individual users). As this is not applicable for my project, I can extract a large volume of data ready for Sentiment Analysis.

There were some limitations to Twint which will be discussed in my report.

** Data Clean - Regex

Regex was the most appropriate method of removing unwanted links, mentions, retweets and hashtags. A simple function was created to encapsulate these changes.

** Sentiment Analysis - TextBlob

[[https://textblob.readthedocs.io/en/dev/][https://textblob.readthedocs.io/en/dev/]]

TextBlob is a python library which offers simple API to access its methods and perform basic NLP tasks such as part-of-speech tagging, noun phrase extraction and sentiment analysis.

TextBlob ustilises the Python Pattern library as can be seen in the _text.py file in TextBlobs' GitHub repository. This module does more than just Sentiment Analysis, however, it was used to predict the Polarity (positive or negative) and the Subjectivity (whether the information was fact or opinion).

** Dataframe Consolidation

Consolidation of the date, tweets, sentiment analysis and other metrics were combined to make the plotting easier.

* Graph Plotting

All programming code, including detailed commentary, for the sub-headings within this section can be be found in the following document [[file:code/cryptocurrency_analysis/graph_plotting.org][Graph Plotting]].

** Coin Prices

As mentioned above, all coin prices were sources from Yahoo Finance (see link above). I chose this site specifically due to the ease for which I was able to export to CSV as well as the fact that it sources all prices from CoinMarketCap. Due to the nature of cryptocurrencies, there are several marketplaces to buy and sell, and therefore, there is not always one set price for each coin. CoinMarketCap consolidates and averages these prices which was important for this project.

** Polarity Analysis

- Polarity refers to the sentiment of the text, whether or not it is positive or negative. The histograms provide an overview of the number of tweets at varying polarity values.
- Range is from -1 to 1, with negative numbers indicating increasing negativity, vice versa for positive numbers and 0 showing neutral sentiment.
- Often, due to the limitations of the TextBlob module, if it is unable confidently assess the polarity of the text, it will assign a neutral value.

** Objectivity vs Neutrality

- These graphs indicate the percentage weighting of positive, negative and neutral tweets.
- The aim of these graphs was to visualise to what degree the TextBlob analysis was unable to provide insight and compare them to the weighting for both positive and negative.

** Price Impact Analysis

The following were all compared to the price over time for both a 'snapshot' and 'extended' period as detailed above.

- Tweet Sentiment - Analysing whether or not increased positivity or negativity has an impact on price.
- Tweet Volume - To prove or disprove my theory that instead of sentiment, the velocity of discussion (volume of tweets) instead had the better indicator for price.
- Google Trend Interest - Analysis compared with Google Trends data which shows the number of searches as a percentage indicator over time. Unfortunately this data could only be provided on a week by week basis for the extended period and so additional input_data was required.

** Tweet Volume

As mentioned above, all data was collated from BitInfoCharts and provided information to volume to coin pricing.

** Correlation Analysis

- A correlation heatmap was created to visualise any potential correlation between all of the parameters (tweet volume, price, sentiment and google trend interest).
- This heatmap was generated to show that correlation is not possible due to the nature of the data.
- The finalised maps show that there is potential links between some parameters, however, there is a delay factor on the impact on pricing, and so direct correlation is not possible.
